import{hideGif as e,showGif as t}from"./loadingGif.js";import o from"./toast.js";import{getValue as n,setValue as i}from"./indexedDButils.js";import a from"./isOnline.js";export async function createBackup(){t();const i=await async function(){const e=(await Backendless.Data.of("NotableBiblePoints").findFirst()).NotablePoints.filter((e=>e.owner==localStorage.getItem("userEmail")))||await n("userNotes");return e?(console.log("Dati attuali:",e),e):(o("Errore: dati non trovati."),[])}();if(!i.length)return o("Non hai ancora salvato nessun punto notevole."),void e();const a=localStorage.getItem("userEmail");if(!i.length)return o("Nessun dato disponibile per l'utente corrente."),void e();let r=JSON.stringify(i,null,4),s=new Blob([r],{type:"application/json"}),l=URL.createObjectURL(s);const c=new Date;let u=`NotableBiblePointsBACKUP_${a}_${String(c.getDate()).padStart(2,"0")}-${String(c.getMonth()+1).padStart(2,"0")}-${c.getFullYear()}.nbp`,d=document.createElement("a");d.href=l,d.download=u,document.body.appendChild(d),d.click(),document.body.removeChild(d),URL.revokeObjectURL(l),e(),o("Backup scaricato con successo. Tienilo in un posto sicuro: non è possibile recuperarlo se lo perdi.")}let r=null;export async function restoreBackup(){const s=document.getElementById("fileInput");s?(s.accept=".nbp",s.addEventListener("change",(async function(s){const l=s.target.files[0];if(!l)return void o("Per favore, seleziona un file JSON.");t();const c=new FileReader;c.onload=async function(t){try{if(r=JSON.parse(t.target.result),!Array.isArray(r))return void o("Il file di backup è corrotto. Non è possibile ripristinarlo.");const e=localStorage.getItem("userEmail");if(!e)return void o("Utente non autenticato.");let s=await a()?await Backendless.Data.of("NotableBiblePoints").findFirst():await n("userNotes");s||(s={NotablePoints:[]});let l=await a?s.NotablePoints:s;for(const t of r){const o=l.findIndex((e=>e.id===t.id));-1!==o?l[o]={...l[o],...t,updatedAt:Date.now().toString()}:l.push({...t,owner:e})}s.NotablePoints=l,await a()?(await Backendless.Data.of("NotableBiblePoints").save(s),console.log("Backup ripristinato con successo sul server!")):(await i("userNotes",l.filter((t=>t.owner===e))),console.log("Backup ripristinato con successo in locale!")),o("Backup ripristinato con successo.")}catch(t){console.error("Errore nel parsing del file JSON:",t),o("Errore nel parsing del file di backup. Assicurati che il file sia valido.")}finally{e()}},c.readAsText(l)})),s.click()):o("Elemento di input file non trovato.")}