import{t as o}from"./toast-BIaIkxlU.js";async function e(e=!0,a=!1){console.log("refresh",e,"showToast",a);try{const r=await fetch("https://gematsam-x.github.io/NotableBiblePoints/version.json",{cache:"no-store"}),i=(await r.json()).version,n=localStorage.getItem("appVersion");n&&n!==i?(console.log(`Nuova versione disponibile! (${n} → ${i})`),a&&o(`Nuova versione disponibile (${n} → ${i}). Per aggiornare, ricarica la pagina.`,2e3),localStorage.setItem("appVersion",i),e&&window.setTimeout((async function(){if("caches"in window)try{const o=await caches.keys();await Promise.all(o.map((o=>caches.delete(o)))),console.log("Cache eliminata! Ora la ripristino..."),navigator.serviceWorker.controller.postMessage("updateCache"),console.log("Cache ripristinata! Ricarico la pagina..."),window.location.reload()}catch(o){console.error("Errore nella cancellazione cache:",o),window.location.reload()}else console.warn("Il browser non supporta le cache. Faccio solo il reload."),window.location.reload()}),1e3)):n?(a&&o(`La versione corrente (${localStorage.getItem("appVersion")}) è già aggiornata.`,2e3),console.log("Versione aggiornata, nessuna azione necessaria")):localStorage.setItem("appVersion",i)}catch(r){console.error("Errore durante il controllo della versione:",r)}}export{e as c};
